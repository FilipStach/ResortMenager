#jwt:
#    auth:
#        converter:
#            principal-attribute: preferred_username
#            resource-id: myClient
#keycloak:
#    auth-server-url: http://localhost:8080
#    credentials:
#        secret: 11111111-1111-1111-1111-111111111111
#    realm: resortMenagerKeyCloak
#    resource: my_client
#    ssl-required: external
#    use-resource-role-mappings: true
logging:
    level:
        org:
            springframework:
                security: DEBUG
server:
    error:
        include-binding-errors: always
        include-message: always
        include-stacktrace: on_param
    port: 8083
spring:
    datasource:
        password: user
        url: jdbc:postgresql://localhost:5432/postgres
        username: postgres
    jpa:
        hibernate:
            ddl-auto: create
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                format_sql: true
        show-sql: true
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:8080/realms/resortManagerKeyCloak
                    jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs